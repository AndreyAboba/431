print(' {ðŸ§ } EntityX lib by stuppp110')
local EntityX = {}
-- Predefined entity groups with NPC names
EntityX.EntityGroups = {
    AI = {
        Missions = {
            Names = {"Poacher", "Poacher Mage", "Poacher Gunner", "Poacher Rifleman", "Imperial", "Imperial Mage", "Nightfall Spitter Spider", "Nightfall Blink Spider"},
            Path = workspace:FindFirstChild("Missions")
        },
        SpiderCave = {
            Names = {"Spider", "Cave Spider"},
            Path = workspace.MapProps:FindFirstChild("SpiderCave")
        }
    }
}

-- Generic function to get closest entity from a given path
function EntityX:GetClosestEntity(mousePos, entityGroup)
    local Camera = workspace.CurrentCamera
    local entities = {}
    local closestEntity, minDistance = nil, math.huge

    local groupData = EntityX.EntityGroups[entityGroup]
    if not groupData then return nil end

    for _, pathData in pairs(groupData) do
        if pathData.Path and pathData.Names then
            for _, entity in pairs(pathData.Path:GetChildren()) do
                if table.find(pathData.Names, entity.Name) then
                    local distance = (Camera.CFrame.Position - entity.Position).Magnitude
                    local screenPos = Camera:WorldToViewportPoint(entity.Position)
                    local mouseDistance = (Vector2.new(screenPos.X, screenPos.Y) - mousePos).Magnitude
                    if mouseDistance < minDistance then
                        minDistance = mouseDistance
                        closestEntity = entity
                    end
                end
            end
        end
    end

    return closestEntity
end

return EntityX


